<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[fawkeswei's blog]]></title>
  <link href="http://blog.fawkeswei.com/atom.xml" rel="self"/>
  <link href="http://blog.fawkeswei.com/"/>
  <updated>2013-07-21T13:10:06+08:00</updated>
  <id>http://blog.fawkeswei.com/</id>
  <author>
    <name><![CDATA[fawkeswei]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[WhatsAppKit - Integrate WhatsApp Into Your App]]></title>
    <link href="http://blog.fawkeswei.com/2013/07/21/whatsappkit-integrate-whatsapp-into-your-app/"/>
    <updated>2013-07-21T13:00:00+08:00</updated>
    <id>http://blog.fawkeswei.com/2013/07/21/whatsappkit-integrate-whatsapp-into-your-app</id>
    <content type="html"><![CDATA[<p>WhatsApp recently added support for <a href="http://www.whatsapp.com/faq/en/iphone/23559013">custom URL scheme support</a>, so I wrote a little wrapper called <a href="https://github.com/fawkeswei/WhatsAppKit/">WhatsAppKit</a> to add support for WhatsApp in all my apps. <a href="https://github.com/fawkeswei/WhatsAppKit/">WhatsAppKit</a> handles urlencoding and optional parameter for you, great for keeping code clean. A demo project is also included in the <a href="https://github.com/fawkeswei/WhatsAppKit/">Github repo</a> as a working example.</p>

<h3>Install</h3>

<p>Two ways to install. The first one is recommended.</p>

<ul>
<li>Use <a href="http://www.cocoapods.org/">Cocoapods</a>. Just add <code>pod 'WhatsAppKit', '1.0.0'</code> to your Podfile.</li>
<li>Simply drag <code>WhatsAppKit</code> folder into your Xcode project.</li>
</ul>


<!-- more -->


<h3>Usage</h3>

<p>Test if WhatsApp for iPhone is installed</p>

<pre><code>if ([WhatsAppKit isWhatsAppInstalled]) {
    // WhatsApp Installed!
}
</code></pre>

<p>Launch WhatsApp</p>

<pre><code>[WhatsAppKit launchWhatsAppWithMessage:@"joga bonito"];
</code></pre>

<h3>License</h3>

<p><a href="https://github.com/fawkeswei/WhatsAppKit/">WhatsAppKit</a> is available under the MIT license.</p>

<blockquote><blockquote><p>Happy Coding!</p></blockquote></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用 Fabric 自動佈署 Flask App]]></title>
    <link href="http://blog.fawkeswei.com/2013/04/13/using-fabric-to-deploy-python-web-apps/"/>
    <updated>2013-04-13T22:50:00+08:00</updated>
    <id>http://blog.fawkeswei.com/2013/04/13/using-fabric-to-deploy-python-web-apps</id>
    <content type="html"><![CDATA[<p>最近用 <a href="flask.pocoo.org">Flask</a> 寫了 <a href="http://whocall.com">WhosCall 網頁版</a>，基於想偷懶的理由而找了一個工具可以很方便佈署到伺服器上，那就是 <a href="http://docs.fabfile.org/">Fabric</a>。它可以很方便在本機端、伺服器上執行指令 &amp; 上傳檔案，設定起來也很簡單。</p>

<h3>基本使用方法</h3>

<ol>
<li>安裝 <code>pip install fabric</code></li>
<li>新增一個檔案 <code>fabfile.py</code> （下面是一個簡單的範例）</li>
</ol>


<!-- more -->


<pre><code>    from fabric.api import *

    env.user = 'username'
    env.hosts = ['server1.com', 'server2.com']

    def deploy():
        # pack files
        local('zip -r build/ upload.zip')
        # upload to server
        put('build/upload.zip', 'path_on_server/upload.zip')
        # unpack files
        run('unzip -o upload.zip')
        # run app
        run('script to start up your app')
</code></pre>

<p>以後每次要佈署 <code>fab deploy</code> 就可以收工了！</p>

<p>除了上面示範基本的佈署之外，也可以順便執行一些例行事務，例如新增 git tag 或是 git push。當然也可以定義其他 method 執行任何重複性的工作。煩人的重複性工作就交給電腦自動化完成吧，這樣就可以更專心在人腦才能完成的事情上了！</p>

<p>更詳細的可以參考 <a href="http://flask.pocoo.org/docs/patterns/fabric/">Flask 官方文件</a>或是 <a href="http://docs.fabfile.org/">Fabric 文件</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Assertions]]></title>
    <link href="http://blog.fawkeswei.com/2013/02/26/assertions/"/>
    <updated>2013-02-26T23:16:00+08:00</updated>
    <id>http://blog.fawkeswei.com/2013/02/26/assertions</id>
    <content type="html"><![CDATA[<p>相較於其他平台，要在 iOS 上面要做測試很困難。不管是因為沒有好的工具、沒有好的教學、沒有時間或是種種原因。但是至少要在程式碼中插入 assertions，不但可以大幅增進程式的穩定度並減少 bug 數量。</p>

<h3>何謂 Assertions</h3>

<p>Assertion 是用來判定程式中的某個執行點必然是某個狀態，舉的例子</p>

<!-- more -->


<pre><code>- (void)doSomething:(NSString *)string {
    NSAssert(string, @"input string should not be nil!");

    // do something 
}
</code></pre>

<p>在進 method 的時候加一行 <code>NSAssert(…)</code> 確保進來的值是如你所想像的，之後的處理邏輯就可以避免掉還要驗證資料的正確性。以上面的例子來說，如果 <code>string</code> 是 <code>nil</code> 的話會直接 crash，這樣在開發上也有好處可以提早抓到問題，並且強迫一定要修好才能繼續運作，避免錯誤被隱藏起來造成未來不穩定的因素。Assertion 就像註解/文件一樣，只是它們不會像註解/文件會過期。</p>

<h3>Live Documentation</h3>

<p>文件或是註解都有一個共同的問題，很容易就過期。程式已經進了好幾版，bug 也都修掉了，但是註解與文件通常都~忘記~來不及更新。
Assertion 一定要過程式才能跑，因此 <strong>assertion 就是最即時的文件</strong>。</p>

<h3>Release Builds</h3>

<p>要注意 Xcode 預設 Release Build 裡 <code>NSAssertion</code> 是會被拿掉的。</p>

<blockquote><p>If you don&#8217;t do unit testing, at least put assertions in your code!</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Markdown 簡介]]></title>
    <link href="http://blog.fawkeswei.com/2013/02/21/markdown-intro/"/>
    <updated>2013-02-21T22:05:00+08:00</updated>
    <id>http://blog.fawkeswei.com/2013/02/21/markdown-intro</id>
    <content type="html"><![CDATA[<p>Markdown 的目的就是要提供一種語法，容易讀、容易寫、還能輕鬆轉換成 html。因此 Markdown 完全由文字和標點符號所組成，不會出現 <code>&lt;h2&gt;標題&lt;/h2&gt;</code> 這種東西。舉個簡單的例子，底下大約 10 行的文字，即使第一次看到 Markdown 文件的人應該都能輕易看懂。</p>

<pre><code>##標題
###副標題

內容、**粗體**、*鞋體* 

1. item 1
2. item 2
</code></pre>

<p>轉換成 html 的成果如下，格式漂亮也完全不需要 rich text editor 多方便！</p>

<!-- more -->


<h2>標題</h2>

<h3>副標題</h3>

<p>內容、<strong>粗體</strong>、<em>鞋體</em></p>

<ol>
<li>item 1</li>
<li>item 2</li>
</ol>


<h3>什麼情況會用到 Markdown？</h3>

<p>我自已平常會用到的地方還不少，幾乎是天天都會用 Markdown 寫些東西。</p>

<ul>
<li>在 <a href="http://dayoneapp.com">DayOne</a> 裡面用 Markdown 寫日記</li>
<li>寫部落格 (這一篇就是用 Markdown 寫的)</li>
<li>Github Repo 的 <a href="https://github.com/AFNetworking/AFNetworking/blob/master/README.md">README</a>, comments, wiki 等等</li>
<li><a href="http://trello.com">Trello</a> 卡片的描述</li>
</ul>


<h3>Markdown 編輯器</h3>

<p>雖然說 Markdown 直接用純文字編輯器就可以寫了，不過有好用的工具寫起來會更順手。有使用 Mac 的人推薦使用 <a href="http://mouapp.com/">Mou</a>，還有這個網頁版的 <a href="http://dillinger.io/#">dillinger</a>。都是免費的，喜歡的話也可以贊助開發者（不是我開發的）。</p>

<blockquote><p>Learn Markdown Today!</p></blockquote>

<p>註：完整語法可以參考<a href="http://markdown.tw/">這裡</a>或是<a href="http://daringfireball.net/projects/markdown/">原文版</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Crashlytics: Crash Reporting Service for iOS Apps]]></title>
    <link href="http://blog.fawkeswei.com/2013/01/28/crashlytics-crash-reporting-service-for-ios-apps/"/>
    <updated>2013-01-28T23:33:00+08:00</updated>
    <id>http://blog.fawkeswei.com/2013/01/28/crashlytics-crash-reporting-service-for-ios-apps</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://try.crashlytics.com/images/media_kit/crashlytics-logo-low-res-on-white.png"></p>

<p>程式總是難免會有 bug，要抓到漏網之魚，除了努力<del>讓使用者幫你</del>測試之外，必備工具就是 <a href="https://www.crashlytics.com">Crashlytics</a> 了。手頭上兩個 iOS 專案使用了接近兩個月以來，都沒有碰到什麼問題，推薦 iOS 開發者一定要用！</p>

<h3>優點</h3>

<ul>
<li>使用超級簡單，不用三分鐘就可以加到專案當中</li>
<li>回報速度非常快，閃退之後不到一分鐘就會收到 email 通知</li>
<li>自動幫你上傳 dSYM 檔案，不需要自己 symlink</li>
<li>report 除了包含 crash log 之外，還會附上一些額外資訊。例如：iOS 版本、是否有 JB 等等</li>
<li>完全免費，沒有任何使用限制</li>
<li>介面賞心悅目，有設計感</li>
</ul>


<h3>缺點</h3>

<p>目前使用兩個月下來沒有發現什麼缺點，真要說缺點的話大概就是開發機要裝 <a href="https://www.crashlytics.com">Crashlytics</a> 提供的 Mac App 吧。</p>

<blockquote><p>馬上幫手頭上的專案都加入 <a href="https://www.crashlytics.com">Crashlytics</a> 吧！</p></blockquote>

<p>註：目前官方網頁只讓你填 email 加入 waiting list，如果等不及的話直接寄信給客服，客服就會直接寄邀請給你囉！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GoogleMapsKit - Launch Google Maps for iPhone From Your App]]></title>
    <link href="http://blog.fawkeswei.com/2012/12/17/googlemapskit-launch-google-maps-for-iphone-from-your-app/"/>
    <updated>2012-12-17T15:29:00+08:00</updated>
    <id>http://blog.fawkeswei.com/2012/12/17/googlemapskit-launch-google-maps-for-iphone-from-your-app</id>
    <content type="html"><![CDATA[<p>Google released its hot new <a href="https://itunes.apple.com/us/app/google-maps/id585027354?mt=8">Google Maps for iPhone</a> with <a href="https://developers.google.com/maps/documentation/ios/urlscheme">custom url support</a>. Wanted to support this feature in multiple apps so I wrote this little wrapper called <a href="https://github.com/fawkeswei/GoogleMapsKit">GoogleMapsKit</a>. Using <a href="https://github.com/fawkeswei/GoogleMapsKit">GoogleMapsKit</a> should be pretty easy but a nice little tutorial would never hurt so I wrote this. A demo project is also included in the Github <a href="https://github.com/fawkeswei/GoogleMapsKit">repo</a> if you need working example code.</p>

<h3>Install</h3>

<ol>
<li>Use <a href="http://www.cocoapods.org/">Cocoapods</a> (recommended)</li>
<li>Drag GoogleMapsKit folder to your project.</li>
</ol>


<h3>Usage</h3>

<p>Check if <a href="https://itunes.apple.com/us/app/google-maps/id585027354?mt=8">Google Maps for iPhone</a> is installed on user&#8217;s device.</p>

<pre><code>if ([GoogleMapsKit isGoogleMapsInstalled]) {
    // Google Maps Installed!
} 
</code></pre>

<!-- more -->


<p>Launch <a href="https://itunes.apple.com/us/app/google-maps/id585027354?mt=8">Google Maps for iPhone</a> with designated coordinate.</p>

<pre><code>[GoogleMapsKit showMapWithCenter:CLLocationCoordinate2DMake(25.0, 121.5)
                            zoom:14];
</code></pre>

<p>Several parameters can be provided to customize default looks at launch.</p>

<pre><code>typedef enum {
    GoogleMapsViewSatellite,
    GoogleMapsViewTraffic,
    GoogleMapsViewTransit,
    GoogleMapsViewClearAll,
} GoogleMapsView;

typedef enum {
    GoogleMapsModeDefault,
    GoogleMapsModeStandard,
    GoogleMapsModeStreetView,
} GoogleMapsMode;
</code></pre>

<p>Search <a href="https://itunes.apple.com/us/app/google-maps/id585027354?mt=8">Google Maps for iPhone</a> with keyword. <del><strong>Notice that you have to url encode your keyword string if you are not using alphanumeric characters.</strong></del> (no need for this since v1.0.1)</p>

<pre><code>[GoogleMapsKit showMapWithSearchKeyword:@"Starbucks"
                             withCenter:CLLocationCoordinate2DMake(25.0, 121.5)
                                   zoom:15];
</code></pre>

<p>As usual, additional parameters can be provided if you wish.</p>

<h3>Future Enhancements</h3>

<ol>
<li><del>More convenience methods</del> (done in v1.0.1)</li>
<li><del>Launch Google Maps with directions</del> (done in v1.0.3)</li>
<li><del>Url encode keyword string</del> (done in v1.0.1)</li>
</ol>


<h3>License</h3>

<p><a href="https://github.com/fawkeswei/GoogleMapsKit">GoogleMapsKit</a> is available under the MIT license.</p>

<blockquote><blockquote><p>Happy Coding!</p></blockquote></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PunApp InstALL | Pack 4 - PinCall 分享]]></title>
    <link href="http://blog.fawkeswei.com/2012/12/13/punapp-install-pack-4-pincall/"/>
    <updated>2012-12-13T01:37:00+08:00</updated>
    <id>http://blog.fawkeswei.com/2012/12/13/punapp-install-pack-4-pincall</id>
    <content type="html"><![CDATA[<p><img class="center" src="https://lh5.googleusercontent.com/-nMidXUtWfaA/UMtmDO0NMDI/AAAAAAAANhc/33qA1tJW82U/s480/PunApp_InstALL.001.png"></p>

<p>感謝 <a href="http://punapp.com/">PunApp</a> 給我這個機會分享 <a href="http://pincall.me">PinCall</a> 一路走來的點點滴滴，自從畢業以來幾乎沒有再上台分享過什麼了。為了這次的分享而動手整理了散落各地的討論記錄、截圖、git commit log 等等，等於是把自己這幾的月以來的成果做一個總整理，也算是額外的小收獲。講著 <a href="http://pincall.me">PinCall</a> 一路走來的改變、決策方式、介面設計、服務整合等等還蠻有趣的，不過也可以看得出來還有很長的路要走，不知道明年的這個時候 <a href="http://pincall.me">PinCall</a> 會變成什麼樣子？連我自己都很期待啊！</p>

<p>有興趣的人也可以看看當天分享的<a href="http://www.slideshare.net/fawkeswei/punapp-install-pack-4-pincall">投影片</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PinCall for iOS/Android「搜尋篇」]]></title>
    <link href="http://blog.fawkeswei.com/2012/11/11/pincall-for-ios-slash-android-part-one-search/"/>
    <updated>2012-11-11T20:28:00+08:00</updated>
    <id>http://blog.fawkeswei.com/2012/11/11/pincall-for-ios-slash-android-part-one-search</id>
    <content type="html"><![CDATA[<p><img class="center" src="https://lh4.googleusercontent.com/-U1rVqcl0tak/UJ9iQ_PJx4I/AAAAAAAANDg/cX4n4IZUDjc/s640/IMG_0548.PNG" title="PinCall on iPhone 5" ></p>

<p><a href="http://pincall.me">PinCall</a> 是我進 <a href="http://www.gogolook.com.tw">Gogolook Inc.</a> 之後的第一個推出的產品，自己寫的東西當然要來自賣自誇一下囉。</p>

<h2>PinCall 主打：超強搜尋</h2>

<p>不管你在哪裡，不管是已經打定主意要吃王品，或者只是突然想吃日式料理，<a href="http://pincall.me">PinCall</a> 都可以迅速幫你找到！不囉嗦直接看實際用起來的結果吧！</p>

<h4>精準找出公館附近所有的星巴克</h4>

<p><img class="center" src="https://lh6.googleusercontent.com/-h1PBE6q6qzY/UJ9mSQkF-xI/AAAAAAAANEk/xDUi4M1WVjQ/s640/IMG_0561.PNG" title="搜尋公館附近的星巴克" ></p>

<!-- more -->


<h4>當然也可以用大分類去搜尋，例如：附近有賣生魚片的餐廳、忠孝東路附近的拉麵、公館附近的吃到飽等等</h4>

<ul>
<li><p>附近有賣生魚片的餐廳
<img class="center" src="https://lh4.googleusercontent.com/-rIysFjGxMQs/UJ9isBvYavI/AAAAAAAANDo/7O7tXiqVp1Y/s640/IMG_0425.PNG" title="搜尋附近有賣生魚片的餐廳" ></p></li>
<li><p>忠孝東路附近好吃的拉麵
<img class="center" src="https://lh3.googleusercontent.com/-vUxdLo2VN-E/UJ9nj0sM5XI/AAAAAAAANEw/muilbS4dqso/s640/IMG_0563.PNG" title="搜尋忠孝東路附近好吃的拉麵" ></p></li>
<li><p>公館附近的吃到飽
<img class="center" src="https://lh5.googleusercontent.com/-THXvLc1qygE/UJ9nj3mqn4I/AAAAAAAANEs/v7fK_oDNXVA/s640/IMG_0562.PNG" title="搜尋公館附近的吃到飽" ></p></li>
</ul>


<h4>其實不只是吃的，基本上打什麼東西都可以搜尋得到，銀行、眼科、書店也都可以找的的到！</h4>

<ul>
<li><p>敦化南路附近的銀行
<img class="center" src="https://lh6.googleusercontent.com/-OTz6loGpA3E/UJ9qTdnNVmI/AAAAAAAANFQ/7MXtF8vBWMk/s640/IMG_0565.PNG" title="搜尋敦化南路附近的銀行" ></p></li>
<li><p>和平東路附近的眼科
<img class="center" src="https://lh3.googleusercontent.com/-OiqbUbhOkTc/UJ9qTGfDvFI/AAAAAAAANFM/VDHB4Y3EV40/s640/IMG_0564.PNG" title="搜尋和平東路附近的眼科" ></p></li>
<li><p>敦化南路附近的書店
<img class="center" src="https://lh3.googleusercontent.com/-wc1iAy8r504/UJ9qTFCLvrI/AAAAAAAANFU/iGrpaB4Y0zc/s640/IMG_0566.PNG" title="搜尋敦化南路附近的書店" ></p></li>
</ul>


<h4>你以為只有這樣嗎？還有更厲害的</h4>

<ul>
<li><p>完全不知道有什麼吃的，直接打一個吃就搞定！
<img class="center" src="https://lh5.googleusercontent.com/-zWcYXxgDZfI/UJ9qUNDVuwI/AAAAAAAANFg/B2KRJaa0eIs/s640/IMG_0568.PNG" title="搜尋南澳附近好吃的" ></p></li>
<li><p>在公館午餐可以吃什麼呢？
<img class="center" src="https://lh5.googleusercontent.com/-llQ1uo4wUHw/UJ9qT7NuIAI/AAAAAAAANFY/YgHpNEDKEPI/s640/IMG_0567.PNG" title="搜尋在公館附近午餐可以吃什麼呢？" ></p></li>
</ul>


<h4>搜尋的結果點進去就是整理好的網誌、網頁，還可以直接打電話訂位或是看地圖，超級方便！</h4>

<p><img class="center" src="https://lh4.googleusercontent.com/-NpOcWfYm1TQ/UJ9xBc7_KoI/AAAAAAAANGQ/kLxmpQgNdR8/s640/IMG_0569.PNG" title="福岡拉麵詳細資料" ></p>

<h2>這麼好用還不快下載！</h2>

<p><a href="https://itunes.apple.com/tw/app/pincall/id554578359"><img src="https://lh6.googleusercontent.com/-6Nqi9Bfsn9E/UJ-CBqsIjsI/AAAAAAAANGg/5G74Cd74Ass/s400/Available_on_the_App_Store_%2528black%2529.png" alt="iTunes" /></a></p>

<p><a href="https://play.google.com/store/apps/details?id=gogolook.pincall2"><img src="https://lh5.googleusercontent.com/-xdPXkpfbNis/UJ-C41X-y2I/AAAAAAAANGo/kRQug5C-pqo/s800/en_generic_rgb_wo_60.png" alt="Google Play" /></a></p>

<p><a href="http://pincall.me">官方網站</a></p>

<p>這只是 <a href="http://pincall.me">PinCall</a> 的一小部分而已，還有更強大的功能下次再繼續介紹，趕快先去玩看看 <a href="http://pincall.me">PinCall</a> 吧！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Submitted Open Graph Action Showing Status: "Active"]]></title>
    <link href="http://blog.fawkeswei.com/2012/11/05/submitted-open-graph-action-showing-status-slash-active-slash/"/>
    <updated>2012-11-05T22:52:00+08:00</updated>
    <id>http://blog.fawkeswei.com/2012/11/05/submitted-open-graph-action-showing-status-slash-active-slash</id>
    <content type="html"><![CDATA[<p><img class="center" src="https://lh4.googleusercontent.com/-ZHZj8TNcpsU/UJ_kkCHcmjI/AAAAAAAANHk/J4cnW6LWC50/s800/Screen%2520Shot%25202012-11-12%2520at%25201.46.09%2520AM.png" title="Open Graph Showing \&#34;Active\&#34;" alt="Open Graph Showing \&#34;Active\&#34;"></p>

<p>Open Graph action submission status became &#8220;Active&#8221; after a few days of submission. I&#8217;ve searched through Facebook&#8217;s <a href="https://developers.facebook.com/docs/">docs</a> and found nothing mentioning this kind of status. Also, nobody is talking about this in <a href="http://stackoverflow.com/search?q=open+graph+action+active">Stackoverflow</a>, which is pretty odd. I thought active!=approved so I kept on waiting…</p>

<p>After one week, finally I decided to poke around with the app&#8217;s setting, I clicked to view the details of the open graph action, this is what I saw</p>

<!-- more -->


<p><img class="center" src="https://lh5.googleusercontent.com/-1k19w1WpuHo/UJ_WXpDL_AI/AAAAAAAANHU/yFBGCNggb6s/s800/Screen%2520Shot%25202012-11-12%2520at%252012.45.47%2520AM.png" title="Open Graph Action Settings" ></p>

<p>What the…, the open graph action was already approved when <strong>Active</strong> is shown. Please update your docs, Facebook!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[新手慘案 - App 送審通過後才發現誤連 development server]]></title>
    <link href="http://blog.fawkeswei.com/2012/10/27/stupid-mistake-by-a-rookie-approved-app-connected-to-development-server/"/>
    <updated>2012-10-27T17:06:00+08:00</updated>
    <id>http://blog.fawkeswei.com/2012/10/27/stupid-mistake-by-a-rookie-approved-app-connected-to-development-server</id>
    <content type="html"><![CDATA[<h3>案情始末</h3>

<p>目前正在寫的某個 iOS 專案一如往常開了兩台伺服器 (development server, production server)，也開開心心送審了。難得這次只有審一個禮拜就通過了，卻在準備上架前發現居然是連到 development server！ 一個失誤，白白浪費了一個多禮拜的時間…</p>

<h3>為何送審之前的測試沒有抓出問題？</h3>

<ul>
<li><p>我用自己的 Log，會在 release build 的時候自己關閉，避免在 release 版本洩漏太多資料，類似這樣</p>

<pre><code>  #ifdef DEBUG
      #define MYLog(xx) NSLog(xx)
  #else
      // don't log anything when not in debug modes
      #define MYLog(xx) void
  #endif
</code></pre></li>
<li>送審版本 (也就是 release build) log 當然是全部關閉了，所以看 log 也無法發現連錯 server 了</li>
<li>UI 也沒有地方顯示是 debug/release build</li>
<li>Unit Test 測不出來</li>
</ul>


<!-- more -->


<ul>
<li>測試清單不夠完備</li>
<li>development server 居然在 apple 審核人員使用的時候正常了</li>
</ul>


<h3>一次就夠了</h3>

<p>改回正確的 url 加上重新送審大概只需要不到 10 分鐘，但是要怎麼樣才能確保以後都不會再出現同樣的情況？目前想要幾的方法。</p>

<ol>
<li><p>加入連線到那個 server 的 Log，即使是使用 release 版也看得到，但不要明顯顯示 server url</p>

<pre><code> if ([serverUrl isEqual:productionUrl]) {
     NSLog(@"Using Production Server");
 } else {
     NSLog(@"Using Debug Server");
 }
</code></pre></li>
<li>在設定頁面加入版本資料還有Build Type (debug/beta/release)，直接可視化，更容易發現異常</li>
<li>加入上架前檢查清單</li>
</ol>


<h3>Lesson Learned</h3>

<p>在開發的常常會因為趕時間 <del>偷懶</del> 而忽略一些事情，再加上自己經驗不足、粗心等等原因引發一些小錯誤。就是這些小錯誤帶來極大的修復成本。每次出錯的時候就應該建立<strong>快速偵測</strong>相同錯誤的方法，之後隨時都可以快速執行一遍，避免再發生相同的失誤。而且重點是要很快速，不然久了又會懶得去檢查。</p>

<blockquote><blockquote><p>Best practice makes perfect.</p></blockquote></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to post json data using AFNetworking]]></title>
    <link href="http://blog.fawkeswei.com/2012/09/26/how-to-post-json-data-using-afnetworking/"/>
    <updated>2012-09-26T21:07:00+08:00</updated>
    <id>http://blog.fawkeswei.com/2012/09/26/how-to-post-json-data-using-afnetworking</id>
    <content type="html"><![CDATA[<p>This should be easy but cost me some time to figure it out.</p>

<p>AFNetworking has a ivar <code>parameterEncoding</code> that need to be set explicitly to <code>AFJSONParameterEncoding</code> and everything works as it should.</p>

<script src="https://gist.github.com/3714727.js"> </script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress customizations after install]]></title>
    <link href="http://blog.fawkeswei.com/2012/09/19/octopress-customizations-after-install/"/>
    <updated>2012-09-19T20:50:00+08:00</updated>
    <id>http://blog.fawkeswei.com/2012/09/19/octopress-customizations-after-install</id>
    <content type="html"><![CDATA[<ul>
<li>Remove blog subfolder

<ul>
<li><code>permalink: /:year/:month/:day/:title/</code></li>
<li><code>category_dir: categories</code></li>
<li><code>pagination_dir: #leave it blank</code></li>
<li>in <code>source/index.html</code> <code>&lt;a href="http://blog.fawkeswei.com/archives"&gt;Blog Archives&lt;/a&gt;</code></li>
</ul>
</li>
<li>Change theme

<ul>
<li>in <code>sass/base/_theme.css</code> <code>sass/custom/_colors.scss</code></li>
<li>awesome <a href="http://subtlepatterns.com/">repeatable patterns</a></li>
<li>nice <a href="http://hslpicker.com">color picker</a></li>
</ul>
</li>
<li>Setup CNAME (for github pages)

<ul>
<li>beware that subpath auto set via <code>rake setup_github_pages</code></li>
</ul>
</li>
<li>Open new post with default editor

<ul>
<li>in Rakefile add <code>foo = `open #{filename}`</code> in <code>task :new_post</code></li>
</ul>
</li>
<li>Setup Feedburner</li>
</ul>


<p>reference:</p>

<p><a href="http://www.moncefbelyamani.com/how-to-install-and-configure-octopress-on-a-mac/">How to install and configure octopress on a mac</a></p>

<p><a href="http://blog.whsienc.net/blog/2012/03/03/how-to-install-octopress-on-mac-lion">Mac OSX Lion 下安裝 Octopress</a></p>
]]></content>
  </entry>
  
</feed>
