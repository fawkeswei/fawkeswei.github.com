<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: iOS | fawkeswei's blog]]></title>
  <link href="http://blog.fawkeswei.com/categories/ios/atom.xml" rel="self"/>
  <link href="http://blog.fawkeswei.com/"/>
  <updated>2013-07-21T13:10:06+08:00</updated>
  <id>http://blog.fawkeswei.com/</id>
  <author>
    <name><![CDATA[fawkeswei]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Assertions]]></title>
    <link href="http://blog.fawkeswei.com/2013/02/26/assertions/"/>
    <updated>2013-02-26T23:16:00+08:00</updated>
    <id>http://blog.fawkeswei.com/2013/02/26/assertions</id>
    <content type="html"><![CDATA[<p>相較於其他平台，要在 iOS 上面要做測試很困難。不管是因為沒有好的工具、沒有好的教學、沒有時間或是種種原因。但是至少要在程式碼中插入 assertions，不但可以大幅增進程式的穩定度並減少 bug 數量。</p>

<h3>何謂 Assertions</h3>

<p>Assertion 是用來判定程式中的某個執行點必然是某個狀態，舉的例子</p>

<!-- more -->


<pre><code>- (void)doSomething:(NSString *)string {
    NSAssert(string, @"input string should not be nil!");

    // do something 
}
</code></pre>

<p>在進 method 的時候加一行 <code>NSAssert(…)</code> 確保進來的值是如你所想像的，之後的處理邏輯就可以避免掉還要驗證資料的正確性。以上面的例子來說，如果 <code>string</code> 是 <code>nil</code> 的話會直接 crash，這樣在開發上也有好處可以提早抓到問題，並且強迫一定要修好才能繼續運作，避免錯誤被隱藏起來造成未來不穩定的因素。Assertion 就像註解/文件一樣，只是它們不會像註解/文件會過期。</p>

<h3>Live Documentation</h3>

<p>文件或是註解都有一個共同的問題，很容易就過期。程式已經進了好幾版，bug 也都修掉了，但是註解與文件通常都~忘記~來不及更新。
Assertion 一定要過程式才能跑，因此 <strong>assertion 就是最即時的文件</strong>。</p>

<h3>Release Builds</h3>

<p>要注意 Xcode 預設 Release Build 裡 <code>NSAssertion</code> 是會被拿掉的。</p>

<blockquote><p>If you don't do unit testing, at least put assertions in your code!</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Crashlytics: Crash Reporting Service for iOS Apps]]></title>
    <link href="http://blog.fawkeswei.com/2013/01/28/crashlytics-crash-reporting-service-for-ios-apps/"/>
    <updated>2013-01-28T23:33:00+08:00</updated>
    <id>http://blog.fawkeswei.com/2013/01/28/crashlytics-crash-reporting-service-for-ios-apps</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://try.crashlytics.com/images/media_kit/crashlytics-logo-low-res-on-white.png"></p>

<p>程式總是難免會有 bug，要抓到漏網之魚，除了努力<del>讓使用者幫你</del>測試之外，必備工具就是 <a href="https://www.crashlytics.com">Crashlytics</a> 了。手頭上兩個 iOS 專案使用了接近兩個月以來，都沒有碰到什麼問題，推薦 iOS 開發者一定要用！</p>

<h3>優點</h3>

<ul>
<li>使用超級簡單，不用三分鐘就可以加到專案當中</li>
<li>回報速度非常快，閃退之後不到一分鐘就會收到 email 通知</li>
<li>自動幫你上傳 dSYM 檔案，不需要自己 symlink</li>
<li>report 除了包含 crash log 之外，還會附上一些額外資訊。例如：iOS 版本、是否有 JB 等等</li>
<li>完全免費，沒有任何使用限制</li>
<li>介面賞心悅目，有設計感</li>
</ul>


<h3>缺點</h3>

<p>目前使用兩個月下來沒有發現什麼缺點，真要說缺點的話大概就是開發機要裝 <a href="https://www.crashlytics.com">Crashlytics</a> 提供的 Mac App 吧。</p>

<blockquote><p>馬上幫手頭上的專案都加入 <a href="https://www.crashlytics.com">Crashlytics</a> 吧！</p></blockquote>

<p>註：目前官方網頁只讓你填 email 加入 waiting list，如果等不及的話直接寄信給客服，客服就會直接寄邀請給你囉！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GoogleMapsKit - Launch Google Maps for iPhone From Your App]]></title>
    <link href="http://blog.fawkeswei.com/2012/12/17/googlemapskit-launch-google-maps-for-iphone-from-your-app/"/>
    <updated>2012-12-17T15:29:00+08:00</updated>
    <id>http://blog.fawkeswei.com/2012/12/17/googlemapskit-launch-google-maps-for-iphone-from-your-app</id>
    <content type="html"><![CDATA[<p>Google released its hot new <a href="https://itunes.apple.com/us/app/google-maps/id585027354?mt=8">Google Maps for iPhone</a> with <a href="https://developers.google.com/maps/documentation/ios/urlscheme">custom url support</a>. Wanted to support this feature in multiple apps so I wrote this little wrapper called <a href="https://github.com/fawkeswei/GoogleMapsKit">GoogleMapsKit</a>. Using <a href="https://github.com/fawkeswei/GoogleMapsKit">GoogleMapsKit</a> should be pretty easy but a nice little tutorial would never hurt so I wrote this. A demo project is also included in the Github <a href="https://github.com/fawkeswei/GoogleMapsKit">repo</a> if you need working example code.</p>

<h3>Install</h3>

<ol>
<li>Use <a href="http://www.cocoapods.org/">Cocoapods</a> (recommended)</li>
<li>Drag GoogleMapsKit folder to your project.</li>
</ol>


<h3>Usage</h3>

<p>Check if <a href="https://itunes.apple.com/us/app/google-maps/id585027354?mt=8">Google Maps for iPhone</a> is installed on user's device.</p>

<pre><code>if ([GoogleMapsKit isGoogleMapsInstalled]) {
    // Google Maps Installed!
} 
</code></pre>

<!-- more -->


<p>Launch <a href="https://itunes.apple.com/us/app/google-maps/id585027354?mt=8">Google Maps for iPhone</a> with designated coordinate.</p>

<pre><code>[GoogleMapsKit showMapWithCenter:CLLocationCoordinate2DMake(25.0, 121.5)
                            zoom:14];
</code></pre>

<p>Several parameters can be provided to customize default looks at launch.</p>

<pre><code>typedef enum {
    GoogleMapsViewSatellite,
    GoogleMapsViewTraffic,
    GoogleMapsViewTransit,
    GoogleMapsViewClearAll,
} GoogleMapsView;

typedef enum {
    GoogleMapsModeDefault,
    GoogleMapsModeStandard,
    GoogleMapsModeStreetView,
} GoogleMapsMode;
</code></pre>

<p>Search <a href="https://itunes.apple.com/us/app/google-maps/id585027354?mt=8">Google Maps for iPhone</a> with keyword. <del><strong>Notice that you have to url encode your keyword string if you are not using alphanumeric characters.</strong></del> (no need for this since v1.0.1)</p>

<pre><code>[GoogleMapsKit showMapWithSearchKeyword:@"Starbucks"
                             withCenter:CLLocationCoordinate2DMake(25.0, 121.5)
                                   zoom:15];
</code></pre>

<p>As usual, additional parameters can be provided if you wish.</p>

<h3>Future Enhancements</h3>

<ol>
<li><del>More convenience methods</del> (done in v1.0.1)</li>
<li><del>Launch Google Maps with directions</del> (done in v1.0.3)</li>
<li><del>Url encode keyword string</del> (done in v1.0.1)</li>
</ol>


<h3>License</h3>

<p><a href="https://github.com/fawkeswei/GoogleMapsKit">GoogleMapsKit</a> is available under the MIT license.</p>

<blockquote><blockquote><p>Happy Coding!</p></blockquote></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PinCall for iOS/Android「搜尋篇」]]></title>
    <link href="http://blog.fawkeswei.com/2012/11/11/pincall-for-ios-slash-android-part-one-search/"/>
    <updated>2012-11-11T20:28:00+08:00</updated>
    <id>http://blog.fawkeswei.com/2012/11/11/pincall-for-ios-slash-android-part-one-search</id>
    <content type="html"><![CDATA[<p><img class="center" src="https://lh4.googleusercontent.com/-U1rVqcl0tak/UJ9iQ_PJx4I/AAAAAAAANDg/cX4n4IZUDjc/s640/IMG_0548.PNG" title="PinCall on iPhone 5" ></p>

<p><a href="http://pincall.me">PinCall</a> 是我進 <a href="http://www.gogolook.com.tw">Gogolook Inc.</a> 之後的第一個推出的產品，自己寫的東西當然要來自賣自誇一下囉。</p>

<h2>PinCall 主打：超強搜尋</h2>

<p>不管你在哪裡，不管是已經打定主意要吃王品，或者只是突然想吃日式料理，<a href="http://pincall.me">PinCall</a> 都可以迅速幫你找到！不囉嗦直接看實際用起來的結果吧！</p>

<h4>精準找出公館附近所有的星巴克</h4>

<p><img class="center" src="https://lh6.googleusercontent.com/-h1PBE6q6qzY/UJ9mSQkF-xI/AAAAAAAANEk/xDUi4M1WVjQ/s640/IMG_0561.PNG" title="搜尋公館附近的星巴克" ></p>

<!-- more -->


<h4>當然也可以用大分類去搜尋，例如：附近有賣生魚片的餐廳、忠孝東路附近的拉麵、公館附近的吃到飽等等</h4>

<ul>
<li><p>附近有賣生魚片的餐廳
<img class="center" src="https://lh4.googleusercontent.com/-rIysFjGxMQs/UJ9isBvYavI/AAAAAAAANDo/7O7tXiqVp1Y/s640/IMG_0425.PNG" title="搜尋附近有賣生魚片的餐廳" ></p></li>
<li><p>忠孝東路附近好吃的拉麵
<img class="center" src="https://lh3.googleusercontent.com/-vUxdLo2VN-E/UJ9nj0sM5XI/AAAAAAAANEw/muilbS4dqso/s640/IMG_0563.PNG" title="搜尋忠孝東路附近好吃的拉麵" ></p></li>
<li><p>公館附近的吃到飽
<img class="center" src="https://lh5.googleusercontent.com/-THXvLc1qygE/UJ9nj3mqn4I/AAAAAAAANEs/v7fK_oDNXVA/s640/IMG_0562.PNG" title="搜尋公館附近的吃到飽" ></p></li>
</ul>


<h4>其實不只是吃的，基本上打什麼東西都可以搜尋得到，銀行、眼科、書店也都可以找的的到！</h4>

<ul>
<li><p>敦化南路附近的銀行
<img class="center" src="https://lh6.googleusercontent.com/-OTz6loGpA3E/UJ9qTdnNVmI/AAAAAAAANFQ/7MXtF8vBWMk/s640/IMG_0565.PNG" title="搜尋敦化南路附近的銀行" ></p></li>
<li><p>和平東路附近的眼科
<img class="center" src="https://lh3.googleusercontent.com/-OiqbUbhOkTc/UJ9qTGfDvFI/AAAAAAAANFM/VDHB4Y3EV40/s640/IMG_0564.PNG" title="搜尋和平東路附近的眼科" ></p></li>
<li><p>敦化南路附近的書店
<img class="center" src="https://lh3.googleusercontent.com/-wc1iAy8r504/UJ9qTFCLvrI/AAAAAAAANFU/iGrpaB4Y0zc/s640/IMG_0566.PNG" title="搜尋敦化南路附近的書店" ></p></li>
</ul>


<h4>你以為只有這樣嗎？還有更厲害的</h4>

<ul>
<li><p>完全不知道有什麼吃的，直接打一個吃就搞定！
<img class="center" src="https://lh5.googleusercontent.com/-zWcYXxgDZfI/UJ9qUNDVuwI/AAAAAAAANFg/B2KRJaa0eIs/s640/IMG_0568.PNG" title="搜尋南澳附近好吃的" ></p></li>
<li><p>在公館午餐可以吃什麼呢？
<img class="center" src="https://lh5.googleusercontent.com/-llQ1uo4wUHw/UJ9qT7NuIAI/AAAAAAAANFY/YgHpNEDKEPI/s640/IMG_0567.PNG" title="搜尋在公館附近午餐可以吃什麼呢？" ></p></li>
</ul>


<h4>搜尋的結果點進去就是整理好的網誌、網頁，還可以直接打電話訂位或是看地圖，超級方便！</h4>

<p><img class="center" src="https://lh4.googleusercontent.com/-NpOcWfYm1TQ/UJ9xBc7_KoI/AAAAAAAANGQ/kLxmpQgNdR8/s640/IMG_0569.PNG" title="福岡拉麵詳細資料" ></p>

<h2>這麼好用還不快下載！</h2>

<p><a href="https://itunes.apple.com/tw/app/pincall/id554578359"><img src="https://lh6.googleusercontent.com/-6Nqi9Bfsn9E/UJ-CBqsIjsI/AAAAAAAANGg/5G74Cd74Ass/s400/Available_on_the_App_Store_%2528black%2529.png" alt="iTunes" /></a></p>

<p><a href="https://play.google.com/store/apps/details?id=gogolook.pincall2"><img src="https://lh5.googleusercontent.com/-xdPXkpfbNis/UJ-C41X-y2I/AAAAAAAANGo/kRQug5C-pqo/s800/en_generic_rgb_wo_60.png" alt="Google Play" /></a></p>

<p><a href="http://pincall.me">官方網站</a></p>

<p>這只是 <a href="http://pincall.me">PinCall</a> 的一小部分而已，還有更強大的功能下次再繼續介紹，趕快先去玩看看 <a href="http://pincall.me">PinCall</a> 吧！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[新手慘案 - App 送審通過後才發現誤連 development server]]></title>
    <link href="http://blog.fawkeswei.com/2012/10/27/stupid-mistake-by-a-rookie-approved-app-connected-to-development-server/"/>
    <updated>2012-10-27T17:06:00+08:00</updated>
    <id>http://blog.fawkeswei.com/2012/10/27/stupid-mistake-by-a-rookie-approved-app-connected-to-development-server</id>
    <content type="html"><![CDATA[<h3>案情始末</h3>

<p>目前正在寫的某個 iOS 專案一如往常開了兩台伺服器 (development server, production server)，也開開心心送審了。難得這次只有審一個禮拜就通過了，卻在準備上架前發現居然是連到 development server！ 一個失誤，白白浪費了一個多禮拜的時間…</p>

<h3>為何送審之前的測試沒有抓出問題？</h3>

<ul>
<li><p>我用自己的 Log，會在 release build 的時候自己關閉，避免在 release 版本洩漏太多資料，類似這樣</p>

<pre><code>  #ifdef DEBUG
      #define MYLog(xx) NSLog(xx)
  #else
      // don't log anything when not in debug modes
      #define MYLog(xx) void
  #endif
</code></pre></li>
<li>送審版本 (也就是 release build) log 當然是全部關閉了，所以看 log 也無法發現連錯 server 了</li>
<li>UI 也沒有地方顯示是 debug/release build</li>
<li>Unit Test 測不出來</li>
</ul>


<!-- more -->


<ul>
<li>測試清單不夠完備</li>
<li>development server 居然在 apple 審核人員使用的時候正常了</li>
</ul>


<h3>一次就夠了</h3>

<p>改回正確的 url 加上重新送審大概只需要不到 10 分鐘，但是要怎麼樣才能確保以後都不會再出現同樣的情況？目前想要幾的方法。</p>

<ol>
<li><p>加入連線到那個 server 的 Log，即使是使用 release 版也看得到，但不要明顯顯示 server url</p>

<pre><code> if ([serverUrl isEqual:productionUrl]) {
     NSLog(@"Using Production Server");
 } else {
     NSLog(@"Using Debug Server");
 }
</code></pre></li>
<li>在設定頁面加入版本資料還有Build Type (debug/beta/release)，直接可視化，更容易發現異常</li>
<li>加入上架前檢查清單</li>
</ol>


<h3>Lesson Learned</h3>

<p>在開發的常常會因為趕時間 <del>偷懶</del> 而忽略一些事情，再加上自己經驗不足、粗心等等原因引發一些小錯誤。就是這些小錯誤帶來極大的修復成本。每次出錯的時候就應該建立<strong>快速偵測</strong>相同錯誤的方法，之後隨時都可以快速執行一遍，避免再發生相同的失誤。而且重點是要很快速，不然久了又會懶得去檢查。</p>

<blockquote><blockquote><p>Best practice makes perfect.</p></blockquote></blockquote>
]]></content>
  </entry>
  
</feed>
